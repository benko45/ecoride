// 1. Importations minimales nécessaires (vous pouvez ajouter d'autres imports si besoin)
@use "../scss/colors";
@import "../../node_modules/bootstrap/scss/functions";

// 3. Mixin pour générer les variables CSS pour les couleurs de texte
// Génération des variables CSS pour le texte et les liens
@mixin generate-text-theme-variables($theme-name, $theme-colors) {
    html[data-bs-theme="#{$theme-name}"] {
      --bs-body-bg: #{map-get($theme-colors, "body-bg")};
      --bs-text-body: #{map-get($theme-colors, "body-color")};
  
      // Liens
      $val: map-get($theme-colors, "link-color");
      --bs-text-link: #{$val};
      --bs-text-link-hover: #{map-get($theme-colors, "link-color", darken($val, 15%))};
      --bs-text-link-active: #{map-get($theme-colors, "link-color", darken($val, 25%))};
  
      // Titres
      --bs-text-heading: #{map-get($theme-colors, "heading-color")};
  
      // Génération des variables pour .text-primary, .text-success, etc.
      @each $color in ("primary", "secondary", "success", "warning", "danger", "info", "light", "dark") {
        @if map-has-key($theme-colors, $color) {
          $val: map-get($theme-colors, $color);
          --bs-text-#{$color}: #{$val};
          --bs-text-#{$color}-hover: #{map-get($theme-colors, "#{$color}-hover", darken($val, 10%))};
          --bs-text-#{$color}-active: #{map-get($theme-colors, "#{$color}-active", darken($val, 20%))};
        }
      }
    }
  }

// 4. Application du mixin pour chaque thème
@each $theme-name, $theme-colors in colors.$themes {
  @include generate-text-theme-variables($theme-name, $theme-colors);
}

// 5. Utilisation des variables générées
body {
  background-color: var(--bs-body-bg) !important;
  color: var(--bs-text-body) !important;
}

h1, h2, h3, h4, h5, h6 {
  color: var(--bs-text-heading) !important;
}

a {
    color: var(--bs-text-link);
    // text-decoration: none; /* Optionnel */
    &:hover {
        color: var(--bs-text-link-hover);
      }
      
    &:active {
        color: var(--bs-text-link-active);
      }
  }
  

// 6. Génération automatique des classes utilitaires text-*
@each $color in ("primary", "secondary", "success", "warning", "danger", "info", "light", "dark") {
  .text-#{$color} {
    color: var(--bs-text-#{$color}) !important;
  }
  .text-#{$color}:hover {
    color: var(--bs-text-#{$color}-hover) !important;
  }
  .text-#{$color}:active {
    color: var(--bs-text-#{$color}-active) !important;
  }
}
