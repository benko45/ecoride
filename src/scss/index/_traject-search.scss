@use 'sass:map';
@use "../styles/colors-variables" as colors;
@use "../variables" as variables;

/********************************************************/
/* formatage de la zone de recherche de trajet */
/********************************************************/

#traject-container-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.traject-container {
    position: absolute;
    // top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
    width: 70%;
    @media screen and (max-width: 425px) {
        top: 50% !important;
    }
    @media screen and (min-width: variables.$breakpoint) {
        width: 100%;
        max-width: 100vw;
    }
}

.traject-container .row {
    width: 100%; // Assurer que la .row prend toute la largeur du parent
    margin: 0;   // Éviter que les marges négatives ne posent problème
}

.traject-search-bloc-width {
    width: 100%;
}

#case-depart, #case-arrivee, #case-date, #case-nb-passagers {
    cursor: pointer;
}

.myInput{
    display: flex;
    align-items: center;
    width: 100%;
    height: 100%;
    white-space: nowrap; /* Empêche le retour à la ligne */
    overflow: hidden;   /* Cache le texte qui dépasse */
    text-overflow: ellipsis; /* Ajoute des points de suspension à la fin */
    padding-left: 10px;
    background-color: inherit;
    &:hover {
        background-color: inherit;
    }
    /* Masquer le curseur clignotant dans les champs de texte ciblés */
    user-select: none;
}

.search-container {
    display: flex;
    padding: 2px;
    width : 100%;
    height: 100%;
    &:hover {
        background-color: var(--custom-gray);
    }
    &:hover #date-picker {
        background-color: var(--custom-gray);
    }
}
.search-container-2 {
    display: flex;
    padding: 2px;
    width : 85%;
    &:hover {
        background-color: var(--custom-gray);
    }
}

/*  certains coins de la première cellule et de la dernière doivent
    s'arrondir différemment selon leur positionnement en ligne ou en colonne*/
.premiere-cellule {
    border-top-left-radius: 20px;
    border-top-right-radius: 20px;
    @media screen and (min-width: variables.$breakpoint) {
            border-top-right-radius: 0;
            border-bottom-left-radius: 20px;
        }
        
}

$radius: 18px;
.premiere-cellule-2 {
    border-top-left-radius: #{$radius};
    border-top-right-radius: #{$radius};
    @media screen and (min-width: variables.$breakpoint) {
            border-top-right-radius: 0;
            border-bottom-left-radius: #{$radius};
        }
        
}

.derniere-cellule {
    border-bottom-left-radius: 20px;
    border-bottom-right-radius: 20px;
    @media screen and (min-width: variables.$breakpoint) {
            border-bottom-left-radius: 0;
            border-top-right-radius: 20px;
        }
}

/************************************************/
/*
/*      .moving-border-color-width-opacity
/*
/************************************************/
/*
/* This class is used to create a defaut bottom-border under breakpoint.
/* and a right-border beyond.
/*
/*     color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*     width: 0 to 10
/*     opacity: 10 to 100
/************************************************/


@each $theme-name, $colors in colors.$themes {
    @each $color-name, $color-value in $colors {
        @for $i from 0 through 10 {
            @for $j from 10 through 100 {
                @if $j%10 == 0 {
                    [theme=#{$theme-name}] .moving-border-#{$color-name}-#{$i}-#{$j} {
                        border-bottom-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                        border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                        border-bottom-style: solid;
                        border-top: none;
                        border-right: none;
                        border-left:none;
                    }
                }
             }
         } 
    }
}

@media screen and (min-width: variables.$breakpoint) {
    @each $theme-name, $colors in colors.$themes {
        @each $color-name, $color-value in $colors {
            @for $i from 0 through 10 {
                @for $j from 10 through 100 {
                    @if $j%10 == 0 {
                        [theme=#{$theme-name}] .moving-border-#{$color-name}-#{$i}-#{$j} {
                            border-right-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                            border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                            border-right-style: solid;
                            border-top: none;
                            border-bottom: none;
                            border-left:none;
                        }
                    }
                 }
             } 
        }
    }
}

/************************************************/
/*
/*      .special-box-shadow-color-spread-opacity
/*
/************************************************/
/*
/*      color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*      spread: 0 to 10
/*      opacity: 0 to 10
/*
/************************************************/

// @media screen and (min-width: variables.$breakpoint) {
//     $border-position: (
//         "top": top,
//         "right": right,
//         "bottom": bottom,
//         "left": left
//     );
//     @each $theme-name, $colors in colors.$themes {
//         @each $color-name, $color-value in $colors {
//             @for $i from 0 through 10 {
//                 @for $j from 0 through 10 {
//                     [theme=#{$theme-name}] .special-box-shadow-#{$color-name}-#{$j}-#{$i} {
//                         box-shadow: 0 4px #{$j * 2px} rgba($color-value, $i * 0.1) !important;
//                     }

//                 }
//             } 
//         }
//     }
// }

/************************************************/
/*
/*      .bottom-border-color-width-opacity
/*
/************************************************/
/*
/* This class is used to create a bottom-border
/* when min-width is beyond breakpoint
/*
/*     color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*     width: 0 to 10
/*     opacity: 10 to 100
/************************************************/

@media screen and (min-width: variables.$breakpoint) {
    @each $theme-name, $colors in colors.$themes {
        @each $color-name, $color-value in $colors {
            @for $i from 0 through 10 {
                @for $j from 10 through 100 {
                    @if $j%10 == 0 {
                        [theme=#{$theme-name}] .bottom-border-#{$color-name}-#{$i}-#{$j} {
                            border-bottom-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                            border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                            border-bottom-style: solid;
                        }
                    }
                }
            } 
        }
    }
}


/************************************************************/
/*    animation des flèches d'inversion  départ-arrivée     */
/************************************************************/
.arrow-bounce {
    overflow: visible;
}
.arrow-bounce path {
    transition: transform 0.3s ease;
}

/* Animation au survol */
.arrow-bounce:hover path:nth-child(1) {
    animation: moveRight 0.5s ease forwards;
}

.arrow-bounce:hover path:nth-child(2) {
    animation: moveLeft 0.5s ease forwards;
}

$translation: 2px;

/* Animation de la flèche droite */
@keyframes moveRight {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(#{$translation});  /* Va vers la droite */
    }
    100% {
        transform: translateX(0);    /* Revient à la position d'origine */
    }
}

/* Animation de la flèche gauche */
@keyframes moveLeft {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(#{-1*$translation}); /* Va vers la gauche */
    }
    100% {
        transform: translateX(0);    /* Revient à la position d'origine */
    }
}

/************************************************************/
/*                  stytle du date-picker                   */
/************************************************************/
.date-picker-div {
    display: flex;
    align-items: center;
    &:hover {
        background-color: var(--custom-gray);
    }
}




// // Styles pour le dropdown sur grands écrans
// @media (min-width: 768px) {
//     #menu {
//         position: absolute;
//         top: 0;
//         right: 0;
//         width: 100%;
//         z-index: 1000;
//     }
// //   .dropdown-menu {
// //     border-radius: 0.25rem;
// //     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
// //   }

// //   .dropdown-item {
// //     color: $primary;
// //     &:hover {
// //       background-color: $primary;
// //       color: $white;
// //     }
// //   }
// }

.dropdown-toggle:not(:focus) {
    outline: 0;
  }