@use 'sass:map';
@use "styles/colors-variables" as colors;
@use "styles/global-styles";

// @debug 'test de d√©bogage';

/************************************************/
$breakpoints: (
    'xs': 0,
    'sm': 576px,
    'md': 768px,
    'lg': 992px,
    'xl': 1200px
);
$breakpoint: map.get($breakpoints, 'md');

body {
    margin: 0;
}
/************************************************************/
/*                  barre de navigation                     */
/************************************************************/
#nav {
    position: fixed;
    width: 100%;
    height: 100px;
    top: 0;
    z-index: 1000;
}
/************************************************************/
/*             Mise forme du menu principal                 */        
/************************************************************/
#menu-container {
    overflow: visible !important;
    position: relative;
    z-index: 9997;
}
// position du menu
#menu {
    position: relative;
    top: 25px;
    left: 80%;
    width: fit-content;
    z-index: 9998;
    overflow: visible !important;
}

#menu > div {
    display: inline-block;
    width: auto;
}

/* Zone de clic √©largie */
#menu-toggle {
    display: flex;
    align-items: center;
    justify-content: space-between;
    // padding: 10px;
    width: fit-content;
    cursor: pointer;
    text-decoration: none;
    color: inherit;
    // border: 1px solid red;
    height: auto !important;    // Forcer la hauteur automatique
    min-height: 40px !important;  // Assurer une hauteur minimale
    z-index: 9999 !important;    // Assurer le premier plan
}

// Style pour la liste du menu
#menu-list {
    display: flex;
    flex-direction: column;
    list-style: none;
    padding: 5px;
    margin: 0;
    position: absolute;
    top: calc(100% + 5px);;
    right: 0;
    border-radius: 5px;
    z-index: 1000;  // Assure que le menu passe devant les autres √©l√©ments
    overflow: hidden;
    max-height: 0;
    opacity: 0;
    visibility: hidden;
    transition: max-height 2s ease, opacity 0.3s ease, visibility 0.3s ease;
    background-color: var(--custom-light);
    width: 400px;
    & li a
    {
        display: flex;
        align-items: center;
        height: 50px;
        width: 100%;
        :hover {
            color: white !important;
            background-color: var(--custom-primary) !important;  // Bleu Bootstrap pour contraste
        }
        text-decoration: none;
        margin: 0;
        .fa-solid {
            padding: 0;
        }
    }
}

.show {
    min-width: 200px !important;
    max-height: 500px !important;  // Ajuste cette valeur selon le contenu
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 9999 !important;
}

/* Ic√¥ne du caret */
.caret-icon {
    margin-left: 10px;  // Aligne la fl√®che √† droite
    pointer-events: none;  // D√©sactive le clic sur l'ic√¥ne pour tout rediriger sur le parent
    color: var(--custom-primary);
    // margin-left: 5px;
    transition: transform 0.3s ease;
    vertical-align: middle;
    z-index: 1000;
    font-family: 'Font Awesome 6 Free';
    font-size: 1.5rem;
    user-select: none;
}

#menu-container {
    display: block !important;
    position: relative;
    height: auto !important;
    min-height: 50px !important;
    overflow: visible !important;
    z-index: 9997;
}

/* Quand le menu est ouvert, la fl√®che tourne vers le haut */
.show-caret .caret-icon {
    transform: rotate(180deg);
}

// Animation de rebond pour la fl√®che
@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-5px);
    }
    60% {
        transform: translateY(-3px);
    }
}


.list-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    // padding: 10px;
    border-bottom: 1px solid var(--custom-primary);
    cursor: pointer;
    &:hover, &:hover * {
        background-color: var(--custom-primary);
        color: white;
    }
}

.my-dropdown-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    text-decoration: none;
    color: inherit;
}

.icon-left {
    margin-right: 10px;
    font-size: 20px;
}

.text-item {
    flex-grow: 1;
}

.icon-right {
    margin-left: auto;
    font-size: 16px;
}

/****************************************************/
/*          Mise en forme du titre                  */    
/****************************************************/
.myTitle{
    position: absolute;
    top: 0.5%; /* Ajuste la distance depuis le haut */
    left: 50% !important;
    transform: translate(-50%, 0.5%) !important;
    z-index: 1025; /* S'assure que le menu est au-dessus */
    color:  var(--custom-primary);
    width: auto;
    @media screen and (min-width: $breakpoint) {
        top: 5%; /* Ajuste la distance depuis le haut */
        left: 50% !important;
        transform: translate(-50%, -5%) !important;
        // color: var(--custom-secondary);
    }
}


/****************************************************/
/*              üîç Menu th√®me (dropdown) 
/****************************************************/
.theme-icon {
    display: none;
}

/* Afficher l'ic√¥ne en fonction du mode actif */
[selected-theme="auto"] .icon-auto {
    display: flex !important;
}

[selected-theme="light"] .icon-light,
[selected-theme="dark"] .icon-dark,
[selected-theme="accessibility-light"] .icon-accessibility-light,
[selected-theme="accessibility-dark"] .icon-accessibility-dark {
    display: flex;
}

/* Masquer toutes les autres ic√¥nes en mode auto */
[selected-theme="auto"] .theme-icon:not(.icon-auto) {
    display: none !important;
}


.dropdown {
    position: absolute;
    top: 15%; /* Ajuste la distance depuis le haut */
    left: 50% !important;
    transform: translate(-50%, 15%) !important;
    z-index: 1050; /* S'assure que le menu est au-dessus */
    @media screen and (min-width: $breakpoint) {
        top: 25%; /* Ajuste la distance depuis le haut */
        left: 50% !important;
        transform: translate(-50%, 25%) !important;
    }
}

.dropdown-menu {
    left: 50% !important;
    transform: translateX(-50%) !important;
    width: max-content;
}

.dropdown-toggle::after {
    border-top-color: var(--custom-primary) !important; /* Change la couleur de la fl√®che */
}

.dropdown ul {
    background-color: var(--custom-light);
}
/*  formatage des ic√¥nes du menu th√®me */
.icon-color {
    fill: var(--custom-primary) !important;
    stroke: var(--custom-primary) !important;
    stroke-width: 1px;
}

button svg {
    width: 16px;
    height: 16px;
}

svg {
    color: var(--custom-primary); /* Devrait colorer l'ic√¥ne */
}

svg symbol path{
    stroke-width: 5px !important;
}

.dropdown-item {
    color: var(--custom-primary);
    &:hover {
        background-color: var(--custom-primary);
    }
}

/****************************************************/
/*                  image de fond                   */
/****************************************************/
.background-image {
    position: relative;

    height: 100vh;
    width: 100%;
    // background-image: url('../../public/img/foret_et_terre_320_568.webp');
    background-image: url('../../public/img/Un_bouleau_au_bord_d_un_chemin_dans_les_Alpes.jpg');
    background-size: cover; /* Remplit l‚Äôespace sans d√©formation */
    background-position: top;
        // ; /* Centre l‚Äôimage */

    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    color: white; /* Texte en blanc */
    @media screen and (min-width: $breakpoint) {
        height: 50vh; /* La moiti√© de la hauteur de l'√©cran */
        width: 100%;
        // background-image: url('../../public/img/foret_et_terre_degrade.webp');
        background-image: url('../../public/img/Un_bouleau_au_bord_d_un_chemin_dans_les_Alpes.jpg');
        // display: flex;
        // justify-content: center;
        // align-items: center;
        }
}

/********************************************************/
/* formatage de la zone de recherche de trajet */
/********************************************************/

.traject-container {
    position: absolute;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
    width: 70%;
    @media screen and (min-width: $breakpoint) {
        width: 100%;
    }
}

.traject-container .row {
    width: 100%; // Assurer que la .row prend toute la largeur du parent
    margin: 0;   // √âviter que les marges n√©gatives ne posent probl√®me
}

.traject-search-bloc-width {
    width: 100%;
    // @media screen and (min-width: $breakpoint) {
    //     width: 90%;
    // }
}

#case-depart, #case-arrivee, #case-date, #case-nb-passagers {
    cursor: pointer;
}

.myInput{
    display: flex;
    align-items: center;
    width: 100%;
    height: 100%;
    white-space: nowrap; /* Emp√™che le retour √† la ligne */
    overflow: hidden;   /* Cache le texte qui d√©passe */
    text-overflow: ellipsis; /* Ajoute des points de suspension √† la fin */
    padding-left: 10px;
    background-color: inherit;
    &:hover {
        background-color: inherit;
    }
    /* Masquer le curseur clignotant dans les champs de texte cibl√©s */
    user-select: none;
}

.search-container {
    display: flex;
    padding: 2px;
    width : 100%;
    height: 100%;
    &:hover {
        background-color: var(--custom-gray);
    }
    &:hover #date-picker {
        background-color: var(--custom-gray);
    }
}
.search-container-2 {
    display: flex;
    padding: 2px;
    width : 85%;
    &:hover {
        background-color: var(--custom-gray);
    }
}

/*  certains coins de la premi√®re cellule et de la derni√®re doivent
    s'arrondir diff√©remment selon leur positionnement en ligne ou en colonne*/
.premiere-cellule {
    border-top-left-radius: 20px;
    border-top-right-radius: 20px;
    @media screen and (min-width: $breakpoint) {
            border-top-right-radius: 0;
            border-bottom-left-radius: 20px;
        }
        
}

$radius: 18px;
.premiere-cellule-2 {
    border-top-left-radius: #{$radius};
    border-top-right-radius: #{$radius};
    @media screen and (min-width: $breakpoint) {
            border-top-right-radius: 0;
            border-bottom-left-radius: #{$radius};
        }
        
}

.derniere-cellule {
    border-bottom-left-radius: 20px;
    border-bottom-right-radius: 20px;
    @media screen and (min-width: $breakpoint) {
            border-bottom-left-radius: 0;
            border-top-right-radius: 20px;
        }
}

/************************************************/
/*
/*      .moving-border-color-width-opacity
/*
/************************************************/
/*
/* This class is used to create a defaut bottom-border under breakpoint.
/* and a right-border beyond.
/*
/*     color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*     width: 0 to 10
/*     opacity: 10 to 100
/************************************************/


@each $theme-name, $colors in colors.$themes {
    @each $color-name, $color-value in $colors {
        @for $i from 0 through 10 {
            @for $j from 10 through 100 {
                @if $j%10 == 0 {
                    [theme=#{$theme-name}] .moving-border-#{$color-name}-#{$i}-#{$j} {
                        border-bottom-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                        border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                        border-bottom-style: solid;
                        border-top: none;
                        border-right: none;
                        border-left:none;
                    }
                }
             }
         } 
    }
}

@media screen and (min-width: $breakpoint) {
    @each $theme-name, $colors in colors.$themes {
        @each $color-name, $color-value in $colors {
            @for $i from 0 through 10 {
                @for $j from 10 through 100 {
                    @if $j%10 == 0 {
                        [theme=#{$theme-name}] .moving-border-#{$color-name}-#{$i}-#{$j} {
                            border-right-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                            border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                            border-right-style: solid;
                            border-top: none;
                            border-bottom: none;
                            border-left:none;
                        }
                    }
                 }
             } 
        }
    }
}

/************************************************/
/*
/*      .special-box-shadow-color-spread-opacity
/*
/************************************************/
/*
/*      color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*      spread: 0 to 10
/*      opacity: 0 to 10
/*
/************************************************/

// @media screen and (min-width: $breakpoint) {
//     $border-position: (
//         "top": top,
//         "right": right,
//         "bottom": bottom,
//         "left": left
//     );
//     @each $theme-name, $colors in colors.$themes {
//         @each $color-name, $color-value in $colors {
//             @for $i from 0 through 10 {
//                 @for $j from 0 through 10 {
//                     [theme=#{$theme-name}] .special-box-shadow-#{$color-name}-#{$j}-#{$i} {
//                         box-shadow: 0 4px #{$j * 2px} rgba($color-value, $i * 0.1) !important;
//                     }

//                 }
//             } 
//         }
//     }
// }

/************************************************/
/*
/*      .bottom-border-color-width-opacity
/*
/************************************************/
/*
/* This class is used to create a bottom-border
/* when min-width is beyond breakpoint
/*
/*     color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*     width: 0 to 10
/*     opacity: 10 to 100
/************************************************/

@media screen and (min-width: $breakpoint) {
    @each $theme-name, $colors in colors.$themes {
        @each $color-name, $color-value in $colors {
            @for $i from 0 through 10 {
                @for $j from 10 through 100 {
                    @if $j%10 == 0 {
                        [theme=#{$theme-name}] .bottom-border-#{$color-name}-#{$i}-#{$j} {
                            border-bottom-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                            border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                            border-bottom-style: solid;
                        }
                    }
                }
            } 
        }
    }
}


/************************************************************/
/*    animation des fl√®ches d'inversion  d√©part-arriv√©e     */
/************************************************************/
.arrow-bounce {
    overflow: visible;
}
.arrow-bounce path {
    transition: transform 0.3s ease;
}

/* Animation au survol */
.arrow-bounce:hover path:nth-child(1) {
    animation: moveRight 0.5s ease forwards;
}

.arrow-bounce:hover path:nth-child(2) {
    animation: moveLeft 0.5s ease forwards;
}

$translation: 2px;

/* Animation de la fl√®che droite */
@keyframes moveRight {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(#{$translation});  /* Va vers la droite */
    }
    100% {
        transform: translateX(0);    /* Revient √† la position d'origine */
    }
}

/* Animation de la fl√®che gauche */
@keyframes moveLeft {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(#{-1*$translation}); /* Va vers la gauche */
    }
    100% {
        transform: translateX(0);    /* Revient √† la position d'origine */
    }
}

/************************************************************/
/*                  stytle du date-picker                   */
/************************************************************/
.date-picker-div {
    display: flex;
    align-items: center;
    &:hover {
        background-color: var(--custom-gray);
    }
}




// // Styles pour le dropdown sur grands √©crans
// @media (min-width: 768px) {
//     #menu {
//         position: absolute;
//         top: 0;
//         right: 0;
//         width: 100%;
//         z-index: 1000;
//     }
// //   .dropdown-menu {
// //     border-radius: 0.25rem;
// //     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
// //   }

// //   .dropdown-item {
// //     color: $primary;
// //     &:hover {
// //       background-color: $primary;
// //       color: $white;
// //     }
// //   }
// }

.dropdown-toggle:not(:focus) {
    outline: 0;
  }
  
