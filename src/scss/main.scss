@use 'sass:map';
@use "styles/colors-variables" as colors;
@use "styles/global-styles";

// @debug 'test de d√©bogage';

/************************************************/
$breakpoints: (
    'xs': 0,
    'sm': 576px,
    'md': 768px,
    'lg': 992px,
    'xl': 1200px
);
$breakpoint: map.get($breakpoints, 'md');

body {
    margin: 0;
}

/****************************************************/
/*              üîç Menu th√®me (dropdown) 
/****************************************************/
.theme-icon {
    display: none;
}

/* Afficher l'ic√¥ne en fonction du mode actif */
[selected-theme="auto"] .icon-auto {
    display: flex !important;
}

[selected-theme="light"] .icon-light,
[selected-theme="dark"] .icon-dark,
[selected-theme="accessibility-light"] .icon-accessibility-light,
[selected-theme="accessibility-dark"] .icon-accessibility-dark {
    display: flex;
}

/* Masquer toutes les autres ic√¥nes en mode auto */
[selected-theme="auto"] .theme-icon:not(.icon-auto) {
    display: none !important;
}

.dropdown {
    position: absolute;
    top: 10%; /* Ajuste la distance depuis le haut */
    left: 50% !important;
    transform: translate(-50%, 10%) !important;
    z-index: 1050; /* S'assure que le menu est au-dessus */
    @media screen and (min-width: $breakpoint) {
        top: 25%; /* Ajuste la distance depuis le haut */
        left: 50% !important;
        transform: translate(-50%, 25%) !important;
    }
}

.dropdown-menu {
    left: 50% !important;
    transform: translateX(-50%) !important;
    width: max-content;
}

.dropdown-toggle::after {
    border-top-color: var(--custom-primary) !important; /* Change la couleur de la fl√®che */
}

.dropdown ul {
    background-color: var(--custom-light);
}
/*  formatage des ic√¥nes du menu th√®me */
.icon-color {
    fill: var(--custom-primary) !important;
    stroke: var(--custom-primary) !important;
    stroke-width: 1px;
}

button svg {
    width: 16px;
    height: 16px;
}

svg {
    color: var(--custom-primary); /* Devrait colorer l'ic√¥ne */
}

svg symbol path{
    stroke-width: 5px !important;
}

.dropdown-item {
    color: var(--custom-primary);
    &:hover {
        background-color: var(--custom-primary);
    }
}


/*      image de fond            */
.background-image {
    position: relative;

    height: 100vh;
    width: 100%;
    background-image: url('../../public/img/foret_et_terre_320_568.webp');
    background-size: cover; /* Remplit l‚Äôespace sans d√©formation */
    background-position: center; /* Centre l‚Äôimage */

    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    color: white; /* Texte en blanc */
    @media screen and (min-width: $breakpoint) {
        height: 50vh; /* La moiti√© de la hauteur de l'√©cran */
        width: 100%;
        background-image: url('../../public/img/foret_et_terre_degrade.webp');
        // display: flex;
        // justify-content: center;
        // align-items: center;
        }
}
/********************************************************/
/* formatage de la zone de recherche de trajet */
/********************************************************/

.traject-container {
    position: absolute;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
    // background-color: red;
    width: 75%;
}

.traject-container .row {
    width: 100%; // Assurer que la .row prend toute la largeur du parent
    margin: 0;   // √âviter que les marges n√©gatives ne posent probl√®me
}

.traject-search-bloc-width {
    width: 100%;
    @media screen and (min-width: $breakpoint) {
        width: 70%;
    }
}

/*  certains coins de la premi√®re cellule et de la derni√®re doivent
    s'arrondir diff√©remment selon leur positionnement en ligne ou en colonne*/
.premiere-cellule {
    border-top-left-radius: 20px;
    border-top-right-radius: 20px;
    @media screen and (min-width: $breakpoint) {
            border-top-right-radius: 0;
            border-bottom-left-radius: 20px;
        }
        
}

.derniere-cellule {
    border-bottom-left-radius: 20px;
    border-bottom-right-radius: 20px;
    @media screen and (min-width: $breakpoint) {
            border-bottom-left-radius: 0;
            border-top-right-radius: 20px;
        }
}

/************************************************/
/*
/*      .moving-border-color-width-opacity
/*
/************************************************/
/*
/* This class is used to create a defaut bottom-border.
/* But beyond breakpoints, it will create a right-border.
/*
/*     color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*     width: 0 to 10
/*     opacity: 10 to 100
/************************************************/


@each $theme-name, $colors in colors.$themes {
    @each $color-name, $color-value in $colors {
        @for $i from 0 through 10 {
            @for $j from 10 through 100 {
                @if $j%10 == 0 {
                    [theme=#{$theme-name}] .moving-border-#{$color-name}-#{$i}-#{$j} {
                        border-bottom-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                        border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                        border-bottom-style: solid;
                        border-top: none;
                        border-right: none;
                        border-left:none;
                    }
                }
             }
         } 
    }
}

@media screen and (min-width: $breakpoint) {
    @each $theme-name, $colors in colors.$themes {
        @each $color-name, $color-value in $colors {
            @for $i from 0 through 10 {
                @for $j from 10 through 100 {
                    @if $j%10 == 0 {
                        [theme=#{$theme-name}] .moving-border-#{$color-name}-#{$i}-#{$j} {
                            border-right-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                            border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                            border-right-style: solid;
                            border-top: none;
                            border-bottom: none;
                            border-left:none;
                        }
                    }
                 }
             } 
        }
    }
}

/************************************************/
/*
/*      .special-box-shadow-color-spread-opacity
/*
/************************************************/
/*
/*      color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*      spread: 0 to 10
/*      opacity: 0 to 10
/*
/************************************************/

// @media screen and (min-width: $breakpoint) {
//     $border-position: (
//         "top": top,
//         "right": right,
//         "bottom": bottom,
//         "left": left
//     );
//     @each $theme-name, $colors in colors.$themes {
//         @each $color-name, $color-value in $colors {
//             @for $i from 0 through 10 {
//                 @for $j from 0 through 10 {
//                     [theme=#{$theme-name}] .special-box-shadow-#{$color-name}-#{$j}-#{$i} {
//                         box-shadow: 0 4px #{$j * 2px} rgba($color-value, $i * 0.1) !important;
//                     }

//                 }
//             } 
//         }
//     }
// }

/************************************************/
/*
/*      .bottom-border-color-width-opacity
/*
/************************************************/
/*
/* This class is used to create a bottom-border
/* when min-width is beyond breakpoint
/*
/*     color: primary, secondary, success, danger, warning, info, light, dark, body-bg, body, link, heading
/*     width: 0 to 10
/*     opacity: 10 to 100
/************************************************/

@media screen and (min-width: $breakpoint) {
    @each $theme-name, $colors in colors.$themes {
        @each $color-name, $color-value in $colors {
            @for $i from 0 through 10 {
                @for $j from 10 through 100 {
                    @if $j%10 == 0 {
                        [theme=#{$theme-name}] .bottom-border-#{$color-name}-#{$i}-#{$j} {
                            border-bottom-color: rgba(var(--custom-#{$color-name}-rgb), $j * 0.01);
                            border-bottom-width: if($theme-name == 'light' or $theme-name == 'dark', #{$i * 1px}, #{$i * 3px});
                            border-bottom-style: solid;
                        }
                    }
                }
            } 
        }
    }
}

/************************************************/
/* cette classe rend la zone d'input cliquable */
/************************************************/

#case-depart, #case-arrivee, #case-date, #case-nb-passagers {
    cursor: pointer;
}

#form-depart, #form-arrivee, #form-date, #form-nb-passagers {
    pointer-events: none; /* D√©sactive l'interaction directe */
}


// Liste des infixes navigateurs pour `::placeholder`
$browser-infix: ('::', '::-webkit-input-', ':-ms-input-'); 

// Boucle sur chaque th√®me d√©fini dans colors.$themes
@each $theme-name, $colors in colors.$themes {
    [theme="#{$theme-name}"] {
        @each $infix in $browser-infix {
            input#{$infix}placeholder {
            color: var(--custom-primary);
            font-weight: if($theme-name == 'light' or $theme-name == 'dark', 400, 600);
            opacity : 1;
            }
        }
    }
}